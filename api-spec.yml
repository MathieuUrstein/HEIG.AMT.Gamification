swagger: '2.0'

info:
  version: "1.0.0"
  title: "AMT - gamification"
  description:
    "The API specification for the AMT - gamification project. All endpoints are implicitely prefixed by __/api__ for the sake of readability."

consumes:
  - application/json
produces:
  - application/json

paths:
  /register/:
    post:
      summary: "Registers a gamified application."
      parameters:
        - name: body
          in: body
          description: "The info needed to create the credentials of the application."
          required: true
          schema:
            $ref: "#/definitions/Credentials"
      responses:
        201:
          description: "Successful operation."

  /auth/:
    post:
      summary: "Logs an application in."
      parameters:
        - name: body
          in: body
          description: "The credentials of the application."
          required: true
          schema:
            $ref: "#/definitions/Credentials"
      responses:
        200:
          description: "Successful operation."
        400:
          description: "Error code todo: Application already authenticated."
        401:
          description: "- Error code 4: The application does not exist.\n- Error code 5: Authentication failed. \n- Error code todo: JWT invalid.\n- Error code todo: Invalid JWT format."
          
  /badges/:
    get:
      summary: "Retrieves all badges for the current application."
      responses:
        200:
          description: "Successful operation."
          schema:
            type: array
            items:
              $ref: "#/definitions/Badge"
      security:
          - JWT: []
    
    post:
      summary: "Creates a new badge."
      parameters:
        - name: body
          in: body
          description: "The info needed to create the badge."
          required: true
          schema:
            $ref: "#/definitions/Badge"
      responses:
        201:
          description: "Successful operation."
          headers:
            Location:
              description: "URI of newly created object."
              type: string
      security:
        - JWT: []
          
  /badges/{id}/:
    get:
      summary: "Retrieves a given badge."
      parameters:
        - name: id
          in: path
          description: "The id of the badge."
          required: true
          type: number
      responses:
        200:
          description: "Successful operation."
          schema:
            $ref: "#/definitions/Badge"
      security:
        - JWT: []
            
    put:
      summary: "Updates a given badge."
      parameters:
        - name: id
          in: path
          description: "The id of the badge."
          required: true
          type: number
          
        - name: body
          in: body
          description: "The new info of the badge."
          schema:
            $ref: "#/definitions/Badge"
      responses:
        200:
          description: "Successful operation."
      security:
        - JWT: []
          
    patch:
      summary: "Partially updates a given badge."
      parameters:
        - name: id
          in: path
          description: "The id of the badge."
          required: true
          type: number
          
        - name: body
          in: body
          description: "The new info of the badge."
          required: false
          schema:
            $ref: "#/definitions/Badge"
      responses:
        200:
          description: "Successful operation."
      security:
        - JWT: []
          
    delete:
      summary: "Deletes a given badge."
      parameters:
        - name: id
          in: path
          description: "The id of the badge."
          required: true
          type: number
      responses:
        200:
          description: "Successful operation."
      security:
        - JWT: []
  
  /events/:
     post:
       summary: "todo"
       responses:
        200:
          description: ""
       security:
        - JWT: []

  /users/:
    get:
      summary: "todo"
      responses:
        200:
          description: "Successful operation. todo"
      security:
        - JWT: []
          
  /users/{id}/:
    get:
      summary: "todo"
      parameters:
        - name: id
          in: path
          description: "todo"
          required: true
          type: number
      responses:
        200:
          description: "todo"
      security:
        - JWT: []
          
  /pointScales/:
     post:
       summary: "todo"
       responses:
         200:
           description: ""
       security:
        - JWT: []
  
  /pointScales/{id}/:
    get:
      summary: "todo"
      parameters:
        - name: id
          in: path
          description: "todo"
          required: true
          type: number
      responses:
        200:
          description: "todo"
      security:
        - JWT: []
          
    put:
      summary: "todo"
      parameters:
        - name: id
          in: path
          description: "todo"
          required: true
          type: number
      responses:
        200:
          description: "todo"
      security:
        - JWT: []
          
    patch:
      summary: "todo"
      parameters:
        - name: id
          in: path
          description: "todo"
          required: true
          type: number
      responses:
        200:
          description: "todo"
      security:
        - JWT: []
          
    delete:
      summary: "todo"
      parameters:
        - name: id
          in: path
          description: "todo"
          required: true
          type: number
      responses:
        200:
          description: "todo"
      security:
        - JWT: []
  
  /rules/events/:
    post:
      summary: "todo"
      parameters:
        - name: body
          in: body
          description: "todo"
          schema:
            $ref: "#/definitions/EventRule"
      responses:
        200:
          description: ""
      security:
        - JWT: []
    
  /rules/events/{id}/:
    put:
      summary: "todo"
      parameters:
        - name: id
          in: path
          description: "todo"
          required: true
          type: number
          
        - name: body
          in: body
          description: "todo"
          schema:
            $ref: "#/definitions/EventRule"
      responses:
        200:
          description: "todo"
      security:
        - JWT: []
          
    patch:
      summary: "todo"
      parameters:
        - name: id
          in: path
          description: "todo"
          required: true
          type: number
          
        - name: body
          in: body
          description: "todo"
          schema:
            $ref: "#/definitions/EventRule"
      responses:
        200:
          description: "todo"
      security:
        - JWT: []
          
    delete:
      summary: "todo"
      parameters:
        - name: id
          in: path
          description: "todo"
          required: true
          type: number
      responses:
        200:
          description: "todo"
      security:
        - JWT: []
  
  /rules/triggers/:
    post:
      summary: "todo"
      parameters:
        - name: body
          in: body
          description: "todo"
          schema:
            $ref: "#/definitions/TriggerRule"  
      responses:
        200:
          description: ""
      security:
        - JWT: []
        
  /rules/triggers/{id}/:
    put:
      summary: "todo"
      parameters:
        - name: id
          in: path
          description: "todo"
          required: true
          type: number
          
        - name: body
          in: body
          description: "todo"
          schema:
            $ref: "#/definitions/TriggerRule"
      responses:
        200:
          description: "todo"
      security:
        - JWT: []
          
    patch:
      summary: "todo"
      parameters:
        - name: id
          in: path
          description: "todo"
          required: true
          type: number
          
        - name: body
          in: body
          description: "todo"
          schema:
            $ref: "#/definitions/TriggerRule"
      responses:
        200:
          description: "todo"
      security:
        - JWT: []
          
    delete:
      summary: "todo"
      parameters:
        - name: id
          in: path
          description: "todo"
          required: true
          type: number
      responses:
        200:
          description: "todo"
      security:
        - JWT: []

securityDefinitions:
  JWT:
    type: apiKey
    name: Authorization
    in: header

definitions:
  Credentials:
    type: object
    properties:
      username:
        type: string
        description: "the username of the application"
      password:
        type: string
        description: "the password of the application"
        
  Badge:
    type: object
    properties:
      name:
        type: string

  EventRule:
    type: object
    properties:
      name:
        type: string
      event:
        type: string
      pointScale:
        type: string
      pointsGiven:
        type: number

  TriggerRule:
    type: object
    properties:
      name:
        type: string
      badgeAwarded:
        type: string
      pointScale:
        type: string
      limit:
        type: number
      aboveLimit:
        type: boolean
      